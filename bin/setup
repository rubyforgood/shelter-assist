#!/usr/bin/env ruby
require "fileutils"

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

#
## Prints the log message with a yellow color to distinguish logs
# See more information here - https://stackoverflow.com/questions/1489183/how-can-i-use-ruby-to-colorize-the-text-output-to-a-terminal
# #
def log(message, color: :yellow)
  color_code = if color == :yellow
                 "33"
               elsif color == :red
                 "31"
               else
                 "37"
               end

  printf "\033[1;#{color_code}m";

  puts "\n[ bin/setup ] #{message}"

  printf "\033[0m"
end


def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

FileUtils.chdir APP_ROOT do
  log "---------------------"
  log "üêï Setup started... üêï"
  log "---------------------"

  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  log "== Installing dependencies =="
  system! "gem install foreman"
  system! "gem install bundler --conservative"
  system!("bundle update --bundler --verbose")
  system!("bundle check") || system!("bundle install")

  # Install JavaScript dependencies if using Yarn
  log '== Installing javascript dependencies via yarn == '
  system('bin/yarn')

  #
  # puts "\n== Copying sample files =="
  # unless File.exist?("config/database.yml")
  #   FileUtils.cp "config/database.yml.sample", "config/database.yml"
  # end

  log "== Preparing database =="
  system! "bin/rails db:prepare"

  log "== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"

  log "== Restarting application server =="
  system! "bin/rails restart"

  log "---------------------"
  log "üêï Done! Run bin/dev to run the application locally at http://localhost:3000 üêï"
  log "---------------------"
end
